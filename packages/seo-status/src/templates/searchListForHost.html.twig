{% extends "base.html.twig" %}

{% block body %}
<div class="px-3 pb-12 mx-auto">
  <h1 class="text-3xl md:ml-6 sr-only">{{ search_value }}</h1>
  {% if host is null %}
    <div class="prose prose-lg md:ml-6 mt-3">
      Le domaine ou sous-domaine suggéré n'est pas présent dans la base de donnée...
    </div>
  {% else %}

<div class="flex lg:space-x-4 space-y-4 lg:space-y-0 lg:flex-row flex-col mt-4">
  <!--  -->
    <div class="lg:basis-1/3 max-w-[220px border-gray-300 border rounded text-lg">
      <h2 class="font-light mb-3 px-4 pt-3 text-left">Mots clefs</h2>
      <table class="table-auto w-full text-center">
        <tr class="[&>*]:py-3 [&>*]:px-6 [&>*]:font-thin text-gray-700">
          <th>Naturel</th>
          <th>Payant</th>
          <th>Total</th>
        </tr>
        <tr class="[&>*]:py-3 [&>*]:px-6">
          <td class="font-bold">
            <a
              class="text-sky-600"
              href="{{ path('searchListForHostRoute', {
                'host': host,
                'filters': generate_filters_uri_parameter({'where': [{'k': 'r.ads', 'o': '=', 'v': '0'}]})
              }) }}">{{ search_count.organic }}</a>
          </td>
          <td>
            <a
              class="text-sky-600"
              href="{{ path('searchListForHostRoute', {
                'host': host,
                'filters': generate_filters_uri_parameter({'where': [{'k': 'r.ads', 'o': '=', 'v': '1'}]})
              }) }}">{{ search_count.paid }}</a>
          </td>
          <td>
            <a class="text-sky-600" href="{{ path('searchListForHostRoute', {'host': host}) }}">{{ search_count.total }}</a>
          </td>
        </tr>
      </table>
    </div>
    <!-- /  -->
</div>

<script defer>
document.addEventListener("DOMContentLoaded", function() {
  window.o = new filtersManager("{{ filters|json_encode|e('js') }}", "{{ path('searchListForHostRoute', {'host': host, 'filters': 'filtersValue'}) }}");window.colManager = new columnManager();
});
</script>
<div class="flex lg:space-x-4 space-y-4 lg:space-y-0 lg:flex-row flex-col mt-4">
    <!-- SearchBlock -->
    <div
      x-data="{
        colManager: null,
        columns: {},
        showFilter: false
      }"
      x-init="
        colManager = new columnManager();
        columns.ads = colManager.setDefaultValue('ads', 1).isShown('ads');
        columns.extractedAt = colManager.setDefaultValue('extractedAt', 1).isShown('extractedAt');
        columns.serpFeatures = colManager.setDefaultValue('serpFeatures', 1).isShown('serpFeatures');
        columns.pixelPos = colManager.setDefaultValue('pixelPos', 1).isShown('pixelPos');
        columns.pos = colManager.setDefaultValue('pos', 1).isShown('pos');
        columns.movement = colManager.setDefaultValue('movement', 1).isShown('movement');
      "
      class="grow max-w-[1200px] overflow-x-auto border-gray-300 border rounded text-lg relative">
      <h2 class="font-light mb-3 px-4 pt-3">Recherches</h2>
      <div
        class="absolute right-2 top-2 px-2 font-light text-gray-600 mt-1 cursor-pointer"
        @click="showFilter = !showFilter">
        <i class="fa-solid fa-table-columns"></i>
      </div>
      <div
        class="absolute bg-white rounded border shadow p-5 px-4 top-3 right-2 mt-6 font-normal -mr-3 z-20"
        x-show="showFilter"
        @click.away="showFilter = false">
        <template x-for="column in Object.keys(columns)" :key="column">
          <label class="flex items-center">
            <input
              type="checkbox"
              @click="
                columns[column] = !columns[column];
                colManager.toggleVisibility(column)"
              :checked="columns[column]"
              class="mr-1">
            <span x-text="column"></span>
          </label>
        </template>
        </div>

      <table
        class="table-auto w-full"
        id="organic-table"
        @click.away="$dispatch('unselect-organicblock-row')">
        <thead class="text-gray-700 sticky bg-white top-0 ">
          <tr class="[&>*]:py-2 [&>*]:px-4 [&>*]:font-thin">
            <th x-show="columns.ads"><!--Ads--></th>
            <th class="text-left"><!--Keyword--></th>
            <th
              x-show="columns.extractedAt"
              class="text-right">
              <div class="flex">
                <span class="block grow">
                  {{ _self.renderTooltip('E. le', 'Extrait le', '') }}</span>
                {{ _self.renderOrderBy(filters, 'sr.extractedAt') }}
              </div>
            </th>
            <th
              x-show="columns.serpFeatures"
              class="text-left w-[150px]">SERP Fonc.</th>
            <th
              x-show="columns.pixelPos"
              class="text-right cursor-pointer w-[160px]" colspan=2>
              <div class="flex">
                <span class="block grow">
                  {{ _self.renderTooltip('PixelPos', 'first | ' ~ host, '') }}</span>
                {{ _self.renderOrderBy(filters, 'r.pixelPos') }}
              </div>
            </th>
            <th
              x-show="columns.pos"
              class="text-right cursor-pointer w-[80px]">
              <div class="flex">
                <span
                  @click="o.toggleOrderBy('r.pos', 'ASC').validate();"
                  class="block grow">Pos</span>
                {{ _self.renderOrderBy(filters, 'r.pos') }}
              </div>
            </th>
            <th
              x-show="columns.movement"
              class="text-right cursor-pointer w-[80px]">
              <div class="flex">
                <span
                  class="block grow">{{ _self.renderTooltip('M...', 'Mouvement', '') }}</span>
                {{ _self.renderOrderBy(filters, 'r.movement') }}
              </div>
            </th>
            <th class="!px-0"></th>
          </tr>

          <tr class="[&>*]:pb-3 [&>*]:font-thin">
            <th
              x-show="columns.ads"
              class="text-center pt-1 pl-2 pr-4">
              <span
                @click="o.update('r.ads','{{ filters.where['r.ads'] is defined ? (filters.where['r.ads'].v == 1 ? 0 : '') : 1 }}').validate()"
                class="cursor-pointer {{ filters.where['r.ads'] is defined
                  ? (filters.where['r.ads'].v == 1 ? 'text-sky-600' : 'text-sky-600 blur-sm')
                  : 'text-gray-300' }}"
              >
                <i class="fa-solid fa-ad"></i>
              </span>
            </th>
            <th class="text-left pt-1 pl-2 pr-4">
              {{ _self.renderFilterInput(filters.where, 's.keyword', 'LIKE', 'keywor...') }}
            </th>
            <th
              x-show="columns.extractedAt"><!--filter sr.extractedAt --></th>
            <th
              x-show="columns.serpFeatures"
              x-data="{right: {{ (filters['sgd.serpFeatures'].v|default('')) ? 'false' : 'true' }} }"
              class="text-left pt-1 pl-2 pr-4 flex flex-row">
              <div
                @click="right = true"
                :class="{'w-3/4': right, 'w-1/4': !right}">
              {{ _self.renderFilterInput(filters.where, 'sr.serpFeatures', 'LIKE', '! Ads', 'rounded-r-none') }}
              </div>
              <div
                @click="right = false"
                :class="{'w-1/4': right, 'w-3/4': !right}">
              {{ _self.renderFilterInput(filters.where, 'sgd.serpFeatures', 'LIKE', 'everSeen', 'rounded-l-none') }}
              </div>
            </th>
            <th
              x-show="columns.pixelPos"
              class="text-right pt-1 pl-2 pr-4"  colspan=2>
              {{ _self.renderFilterInput(filters.where, 'r.pixelPos', '<=', '<= 250') }}
            </th>
            <th
              x-show="columns.pos"
              class="text-right pt-1 pl-2 pr-4">
              {{ _self.renderFilterInput(filters.where, 'r.pos', '<=', '<= 3') }}
            </th>
            <th
              x-show="columns.movement"
              class="text-right pt-1 pl-2 pr-4">
              {{ _self.renderFilterInput(filters.where, 'r.movement', '>=', '>= 5') }}
            </th>
            <th class="!px-0">
              <button
                @click="o.validate();"
                class="bg-sky-600 text-gray-50 py-1 px-3 rounded -ml-2">
                <i class="fa-solid fa-search"></i></button>
            </th>
          </tr>
        </thead>

        {% for search in search_list %}
          {% set search_result = search.searchGoogleData.lastSearchResults.retrieveSearchResultFor(host) %}
          {% set search_result_first = search.searchGoogleData.lastSearchResults.first(search_result.isAds) %}
          {% set search_result_previous = search.searchGoogleData.lastSearchResults.previous is null ? null
            : search.searchGoogleData.lastSearchResults.previous.retrieveSearchResultFor(host) %}

          <tr
            x-data="{ selected: false }"
            @click="selected = ! selected"
            @unselect-organicblock-row.window="selected = false "
            :class="{ 'bg-gray-200' : selected }"
            class="border-t [&>*]:py-3 [&>*]:px-4 hover:bg-gray-100">
            <td
              x-show="columns.ads"
              class="text-gray-300 text-center">
              {{ search_result.ads ? '<i class="fa-solid fa-ad"></i>' : '' }}
            </td>

            <td
              class="text-left">
              {{ _self.renderTooltip(
                  '<i class="fa-solid fa-arrow-up-right-from-square"></i>',
                  '<a href="https://www.google.fr/search?hl=fr&q='~ search.keyword|replace({' ': '+'}) ~'"
                    rel="noopener" target="_blank" class="text-sm inline-block mr-1 text-gray-500">
                    Google
                  </a> |
                  <a href="'~ path('searchCacheRoute', {keyword: search.keyword}) ~'"
                    target="_blank"
                    class="text-sm inline-block mr-2 text-gray-500">
                    Cache
                  </a>',
                  'text-sm inline-block mr-2 text-gray-400',
                  'p-3 text-gray-400 text-base',
                  '@dblclick="console.log(event.target.parentNode); event.target.parentNode.querySelector(\'a\').click()"'
                ) }}
              <a
                href="{{ path('searchRoute', {'keyword': search.keyword}) }}"
                class="text-sky-600">{{ search.keyword }}</a>
            </td>

            <td
              x-show="columns.extractedAt"
              class="text-right">
              {% set previous_date = search_result.searchResults.previous ? search_result.searchResults.previous.extractedAt|app_date : 'Ø' %}
              {{ _self.renderTooltip(
                  search_result.searchResults.extractedAt|app_date,
                  '<span class="text-gray-400">précédent:</span> ' ~ previous_date,
                  'text-light text-gray-500', 'p-2') }}
            </td>

            <td
              x-show="columns.serpFeatures"
              class="flex space-x-2 w-[80px]">
                {% for feature, pixelPos in search.searchGoogleData.lastSearchResults.serpFeatures %}
                  {% set featureStd = serp_feature(feature) %}
                  {{ _self.renderTooltip(
                   '<i class="fa-solid fa-'~featureStd.icon~' text-sky-900 text-sm"></i>',
                  featureStd.label ~ ' ↓ '~pixelPos,
                  'text-sm inline-block mr-2 text-gray-400',
                  'p-3 text-base text-gray-600'
                ) }}
                {% endfor %}

              {% for feature, data in search.searchGoogleData.serpFeatures %}
                {% if search.searchGoogleData.lastSearchResults.serpFeatures[feature] is not defined %}
                  {% set featureStd = serp_feature(feature) %}
                  {{ _self.renderTooltip(
                   '<i class="fa-solid fa-'~featureStd.icon~' text-sky-499 text-sm"></i>',
                  featureStd.label ~ ' ↓ '~data[0]~' | 👁'~(data[1]|app_date),
                  'text-sm inline-block mr-2 text-gray-400',
                  'p-3 text-base text-gray-600'
                ) }}
                {% endif %}
              {% endfor %}
            </td>
            <td
              x-show="columns.pixelPos"
              class="text-right w-[60px]">
              {{ search_result_first.pixelPos == search_result.pixelPos ? ''
                : _self.renderTooltip(search_result_first.pixelPos, _self.renderSearchResultUrl(search_result_first, false), '', 'p-3') }}
            </td>
            <td
              x-show="columns.pixelPos"
              class="text-right w-[60px]">
              {{ search_result.pixelPos }}
              {#
              {% if search_result_previous is not null %}
                {% set difference = search_result.pixelPos - search_result_previous.pixelPos %}
                {{ difference >= 0 ? '+' : '-' }}
              {% endif %} #}
            </td>
            <td
              x-show="columns.pos"
              class="text-right">{{ search_result.pos }}</td>
            <td
              x-show="columns.movement"
              class="text-right">{{ search_result.movementStr }}</td>
            <td
              class="!px-0"></td>
          </tr>
        {% endfor %}
      </table>
    </div>
    <!-- / SearchBlock -->

  </div>

  {% endif %}
</div>

{% endblock %}

{% macro getOrderByColor(orderKey, expectedValue, filters) %}
  {{ filters.orderBy[orderKey] is defined and filters.orderBy[orderKey] == expectedValue ? 'text-sky-600' : 'text-gray-300' }}
{% endmacro %}

{% macro renderFilterInput(where, key, default_operator, placeholder, extra_class = '') %}
<input
  type="text"
  name="{{ key }}"
  placeholder="{{ placeholder }}"
  @keydown.enter="o.validate();"
  @input="o.updateInput('{{ key }}')"
  value="{{ ((where[key].o|default(default_operator)) == default_operator ? '' : where[key].o ~ ' ') ~ (where[key].v|default('')) }}"
  operator="{{ default_operator }}"
  class="rounded border border-gray-200 w-full !text-gray-900 !font-light {{ extra_class }}">
{% endmacro %}

{% macro renderOrderBy(filters, orderKey) %}
  <span
    class="{{ _self.getOrderByColor(orderKey, 'DESC', filters) }} ml-2 block px-1 cursor-pointer"
    @click="o.toggleOrderBy('{{ orderKey }}', 'DESC').validate();">
      <i class="fa-solid fa-arrow-up"></i></span>
  <span
    class="{{ _self.getOrderByColor(orderKey, 'ASC', filters) }} block px-1  cursor-pointer"
    @click="o.toggleOrderBy('{{ orderKey }}', 'ASC').validate();">
      <i class="fa-solid fa-arrow-down"></i></span>
{% endmacro %}
{# renderSelectOption:
  <select
                name="sr.serpFeatures"
                operator="LIKE"
                @input="o.updateInput('sr.serpFeatures').validate()"
                class="rounded border border-gray-200 w-full !text-gray-900 !font-light">
                <option></option>
                {% for featureKey, feature in serp_feature() %}
                  <option
                    value="{{ featureKey }}"
                    {{ filters['sr.serpFeatures'] is defined and filters['sr.serpFeatures'].v == featureKey ? ' selected' : '' }}>
                    {{ feature.label }}</option>
                {% endfor %}
              </select>
#}